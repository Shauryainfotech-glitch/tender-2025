# ConfigMap for AVGC Tender Management System
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: avgc-tender-system
data:
  # Application Configuration
  NODE_ENV: "production"
  LOG_LEVEL: "info"
  
  # API Configuration
  API_VERSION: "v1"
  API_PREFIX: "/api/v1"
  API_TIMEOUT: "30000"
  
  # Database Configuration
  DB_POOL_MIN: "2"
  DB_POOL_MAX: "10"
  DB_TIMEOUT: "30000"
  
  # Redis Configuration
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  SESSION_TTL: "3600"
  
  # RabbitMQ Configuration
  RABBITMQ_HOST: "rabbitmq-service"
  RABBITMQ_PORT: "5672"
  RABBITMQ_PREFETCH: "10"
  
  # Elasticsearch Configuration
  ELASTICSEARCH_HOST: "elasticsearch-service"
  ELASTICSEARCH_PORT: "9200"
  
  # File Upload Configuration
  MAX_FILE_SIZE: "52428800"  # 50MB
  ALLOWED_FILE_TYPES: "pdf,doc,docx,xls,xlsx,jpg,jpeg,png"
  UPLOAD_PATH: "/app/uploads"
  
  # EMD Configuration
  EMD_STANDARD_RATE: "0.02"  # 2% of tender value
  EMD_MAX_AMOUNT: "5000000"  # 50 lakhs
  EMD_MIN_AMOUNT: "5000"
  EMD_VALIDITY_DAYS: "180"
  
  # Security Configuration
  BID_SECURITY_RATE: "0.02"  # 2% of tender value
  BID_SECURITY_MIN: "50000"
  BID_SECURITY_MAX: "5000000"
  BID_SECURITY_VALIDITY_DAYS: "45"
  
  PERFORMANCE_SECURITY_RATE: "0.05"  # 5% of contract value
  PERFORMANCE_SECURITY_MIN: "100000"
  PERFORMANCE_SECURITY_MAX: "10000000"
  PERFORMANCE_SECURITY_VALIDITY_MONTHS: "3"
  
  WARRANTY_SECURITY_RATE: "0.03"  # 3% of contract value
  WARRANTY_VALIDITY_YEARS: "1"
  
  # Notification Configuration
  EMAIL_FROM: "noreply@avgc-tenders.com"
  EMAIL_BATCH_SIZE: "100"
  SMS_BATCH_SIZE: "100"
  NOTIFICATION_RETRY_ATTEMPTS: "3"
  
  # Report Configuration
  REPORT_GENERATION_TIMEOUT: "300000"  # 5 minutes
  REPORT_CACHE_TTL: "1800"  # 30 minutes
  MAX_EXPORT_ROWS: "10000"
  
  # Rate Limiting
  RATE_LIMIT_WINDOW: "900000"  # 15 minutes
  RATE_LIMIT_MAX_REQUESTS: "100"
  
  # Monitoring
  METRICS_PORT: "9090"
  METRICS_PATH: "/metrics"
  HEALTH_CHECK_PATH: "/health"
  READY_CHECK_PATH: "/ready"

---
# Frontend Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
  namespace: avgc-tender-system
data:
  nginx.conf: |
    server {
        listen 80;
        server_name _;
        
        root /usr/share/nginx/html;
        index index.html;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https:; style-src 'self' 'unsafe-inline' https:; img-src 'self' data: https:; font-src 'self' data: https:;" always;
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 10240;
        gzip_proxied expired no-cache no-store private auth;
        gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml application/javascript application/json;
        gzip_disable "MSIE [1-6]\.";
        
        # Cache static assets
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # React app routing
        location / {
            try_files $uri $uri/ /index.html;
        }
        
        # API proxy
        location /api {
            proxy_pass http://api-gateway-service:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # WebSocket proxy
        location /socket.io {
            proxy_pass http://api-gateway-service:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }