#!/bin/bash

# AVGC Tender Management System - Cleanup Script
# This script helps clean up the entire system from Kubernetes

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Configuration
NAMESPACE="avgc-tender-system"

# Functions
print_status() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

confirm_cleanup() {
    print_warning "This will delete all resources in the ${NAMESPACE} namespace!"
    print_warning "All data will be lost if you haven't backed it up."
    read -p "Are you sure you want to continue? Type 'yes' to confirm: " -r
    echo
    if [[ ! $REPLY == "yes" ]]; then
        print_status "Cleanup cancelled."
        exit 0
    fi
}

cleanup_resources() {
    print_status "Cleaning up all resources in namespace ${NAMESPACE}..."
    
    # Delete all deployments
    print_status "Deleting deployments..."
    kubectl delete deployments --all -n ${NAMESPACE} --ignore-not-found=true
    
    # Delete all statefulsets
    print_status "Deleting statefulsets..."
    kubectl delete statefulsets --all -n ${NAMESPACE} --ignore-not-found=true
    
    # Delete all services
    print_status "Deleting services..."
    kubectl delete services --all -n ${NAMESPACE} --ignore-not-found=true
    
    # Delete all configmaps
    print_status "Deleting configmaps..."
    kubectl delete configmaps --all -n ${NAMESPACE} --ignore-not-found=true
    
    # Delete all secrets
    print_status "Deleting secrets..."
    kubectl delete secrets --all -n ${NAMESPACE} --ignore-not-found=true
    
    # Delete all PVCs
    print_status "Deleting persistent volume claims..."
    kubectl delete pvc --all -n ${NAMESPACE} --ignore-not-found=true
    
    # Delete ingress
    print_status "Deleting ingress..."
    kubectl delete ingress --all -n ${NAMESPACE} --ignore-not-found=true
    
    # Delete network policies
    print_status "Deleting network policies..."
    kubectl delete networkpolicies --all -n ${NAMESPACE} --ignore-not-found=true
    
    # Delete RBAC
    print_status "Deleting RBAC resources..."
    kubectl delete rolebindings --all -n ${NAMESPACE} --ignore-not-found=true
    kubectl delete roles --all -n ${NAMESPACE} --ignore-not-found=true
    kubectl delete serviceaccounts --all -n ${NAMESPACE} --ignore-not-found=true
}

delete_namespace() {
    print_status "Deleting namespace ${NAMESPACE}..."
    kubectl delete namespace ${NAMESPACE} --ignore-not-found=true
}

cleanup_cluster_resources() {
    print_status "Cleaning up cluster-wide resources..."
    kubectl delete clusterrolebinding avgc-monitoring-rolebinding --ignore-not-found=true
    kubectl delete clusterrole avgc-monitoring-role --ignore-not-found=true
    kubectl delete clusterrolebinding prometheus --ignore-not-found=true
    kubectl delete clusterrole prometheus --ignore-not-found=true
}

# Main cleanup flow
main() {
    print_status "Starting AVGC Tender Management System cleanup..."
    
    confirm_cleanup
    
    case "${1:-all}" in
        all)
            cleanup_resources
            cleanup_cluster_resources
            delete_namespace
            ;;
        resources)
            cleanup_resources
            ;;
        namespace)
            delete_namespace
            ;;
        *)
            echo "Usage: $0 [all|resources|namespace]"
            exit 1
            ;;
    esac
    
    print_status "Cleanup completed successfully!"
}

# Run main function
main "$@"